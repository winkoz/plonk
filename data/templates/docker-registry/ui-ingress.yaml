{{if (eq .DEPLOY_UI "true")}}
{{ if (eq .USE_WILDCARD_TLS_CERTIFICATE "true") }}
#######################################################
## Wildcard TLS Cert
#######################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.NAME}}-{{.ENV}}-ui-ingress
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "false"
    kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/rewrite-target: /$1$2
    {{if (eq .AUTH_TYPE "basic")}}
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: {{.AUTH_TYPE}}
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: {{.NAME}}-{{.ENV}}-auth-secret
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: '{{.AUTH_MESSAGE}}'
    {{end}}
    {{if (eq .AUTH_TYPE "oauth")}}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    {{end}}
spec:
  tls:
  - hosts: 
    - "ui-{{.HOSTNAME}}"
    secretName: {{.WILDCARD_TLS_SECRET}}
  rules:
  - host: "ui-{{.HOSTNAME}}"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: {{.NAME}}-{{.ENV}}-ui-service
            port: 
              number: {{.UI_SERVICE_PORT}}
  - host: {{.WILDCARD_HOST | wrapInQuotes}}
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: {{.NAME}}-{{.ENV}}-ui-service
            port: 
              number: {{.UI_SERVICE_PORT}}
{{ else }}
#######################################################
## Let's Encrypt issued TLS
#######################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.NAME}}-{{.ENV}}-ui-ingress
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    {{if (eq .AUTH_TYPE "basic")}}
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: {{.AUTH_TYPE}}
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: {{.NAME}}-{{.ENV}}-auth-secret
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: '{{.AUTH_MESSAGE}}'
    {{end}}
    {{if (eq .AUTH_TYPE "oauth")}}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    {{end}}
spec:
  tls:
    - hosts:
      - "ui-{{.HOSTNAME}}"
      {{ if (eq .USE_WILDCARD_TLS_CERTIFICATE "true") }}
      secretName: {{.WILDCARD_TLS_SECRET}}
      {{else}}
      secretName: {{.NAME}}-{{.ENV}}-tls
      {{end}}
  rules:
  - host: "ui-{{.HOSTNAME}}"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: {{.NAME}}-{{.ENV}}-ui-service
            port: 
              number: {{.UI_SERVICE_PORT}}
{{end}}

{{if (eq .AUTH_TYPE "oauth")}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.NAME}}-{{.ENV}}-oauth2-proxy
  namespace: {{.NAME}}-{{.ENV}}
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "false"
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
      - "ui-{{.HOSTNAME}}"
      {{if (eq .USE_WILDCARD_TLS_CERTIFICATE "true")}}
      secretName: {{.WILDCARD_TLS_SECRET}}
      {{else}}
      secretName: {{.NAME}}-{{.ENV}}-tls
      {{end}}
  rules:
  - host: "ui-{{.HOSTNAME}}"
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: {{.NAME}}-{{.ENV}}-oauth2-proxy
            port: 
              number: {{.OAUTH_CONTAINER_PORT}}
  {{ if (eq .USE_WILDCARD_TLS_CERTIFICATE "true") }}
  - host: {{.WILDCARD_HOST | wrapInQuotes}}
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: {{.NAME}}-{{.ENV}}-oauth2-proxy
            port: 
              number: {{.OAUTH_CONTAINER_PORT}}
  {{end}}
{{end}}
{{end}}