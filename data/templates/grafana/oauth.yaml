{{if (eq .AUTH_TYPE "oauth")}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.NAME}}-{{.ENV}}-oauth2-proxy
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.NAME}}-{{.ENV}}
      component: {{.COMPONENT}}
  template:
    metadata:
      labels:
        app: {{.NAME}}-{{.ENV}}
        component: {{.COMPONENT}}
    spec:
      containers:
      - args:
        - --provider={{.OAUTH_PROVIDER}}
        - --email-domain={{.OAUTH_EMAIL_DOMAIN}}
        - --github-org={{.OAUTH_ORGANIZATION}}
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --whitelist-domain=".winkoz.com"
        - --auth-logging={{.OAUTH_LOG_ATTEMPTS}}
        - --redirect-url=https://{{.HOSTNAME}}/oauth2/callback
        - --set-xauthrequest={{.OAUTH_SET_XAUTHREQUEST}}
        - --set-authorization-header={{.OAUTH_SET_AUTH_HEADER}}
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{.OAUTH2_PROXY_CLIENT_ID}}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{.OAUTH2_PROXY_CLIENT_SECRET}}
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{.OAUTH2_PROXY_COOKIE_SECRET}}
        image: {{.OAUTH_DOCKER_IMAGE}}
        imagePullPolicy: {{.IMAGE_PULLPOLICY}}
        name: {{.NAME}}-{{.ENV}}-oauth2-proxy
        ports:
        - containerPort: {{.OAUTH_CONTAINER_PORT}}
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: {{.NAME}}-{{.ENV}}-oauth2-proxy
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
spec:
  ports:
  - name: http
    port: {{.OAUTH_CONTAINER_PORT}}
    protocol: TCP
    targetPort: {{.OAUTH_CONTAINER_PORT}}
  selector:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
{{end}}
