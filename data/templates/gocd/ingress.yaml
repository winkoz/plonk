{{ if (eq .USE_WILDCARD_TLS_CERTIFICATE "true") }}
#######################################################
## Wildcard TLS Cert
#######################################################
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{.NAME}}-{{.ENV}}-ingress
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "false"
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts: 
    - {{.HOSTNAME | wrapInQuotes}}
    secretName: {{.WILDCARD_TLS_SECRET}}
  rules:
  - host: {{.HOSTNAME | wrapInQuotes}}
    http:
      paths:
      - backend:
          service:
            name: {{.NAME}}-{{.ENV}}-service
            port: 
              number: {{.SERVICE_PORT}}
  - host: {{.WILDCARD_HOST | wrapInQuotes}}
    http:
      paths:
      - backend:
          service:
            name: {{.NAME}}-{{.ENV}}-service
            port: 
              number: {{.SERVICE_PORT}}
{{ else }}
#######################################################
## Let's Encrypt issued TLS
#######################################################
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{.NAME}}-{{.ENV}}-ingress
  namespace: {{.NAME}}-{{.ENV}}
  labels:
    app: {{.NAME}}-{{.ENV}}
    component: {{.COMPONENT}}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
      - {{.HOSTNAME | wrapInQuotes}}
      secretName: {{.NAME}}-{{.ENV}}-tls
  rules:
  - host: {{.HOSTNAME | wrapInQuotes}}
    http:
      paths:
      - backend:
          service:
            name: {{.NAME}}-{{.ENV}}-service
            port: 
              number: {{.SERVICE_PORT}}
{{ end }}